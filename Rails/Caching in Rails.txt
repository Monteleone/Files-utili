
Key-based expiration model and cache Russian Doll


cache['store' , Product.latest] do


Questo è un helper che Rails fornisce.In genere , quando vediamo funzioni nelle view ,queste sono degli helper.
Questo helper permette di cachare un frammento di view , piuttosto che l'intera pagina.

cache(key) { ... }

Ritorna il contenuto del blocco ,relativo alla chiave inserita, per un certo tempo.
['store', Product.latest] sono dei parametri grazie ai quali siamo in grado di creare una based cache-key-name.
Le stringhe presenti nell'array producono una stringa simile a:

store/products/100-20140101-163830

che è successivamente usata dalla cache per salvare il risultato del blocco
La nostra cache l'abbiamo chiamata "store"
Usiamo il parametro Product.latest per assicurarci che il frammento del blocco non sia stato modificato
Questo parametro ritorna l'ultimo prodotto modificato , che se non combacia con quello della cache 
significa che qualcosa è cambiato (nel DB) e quindi dobbiamo aggiornare il frammento della view

Nella nostra view , annidata alla cache dello store , creiamo una nuova cache per ogni singolo prodotto:


cache ['store' , Product.latest] do
  @products.each do |product| 
    cache ['entry',product ] do
      ...
      ...
      ...
      
Creando la nuova cache "entry" stiamo verificando , per ogni singolo prodotto , che questo non abbia subito modifiche
Se il .latest prodotto l'ha subita , allora non è detto che SOLO un prodotto sia stato modificato (creato etc..)
quindi , servendoci di una seconda cache , controlliamo uno ad uno che i prodotti siano rimasti uguali a prima.
Se qualcuno di questi , non dovesse avere un id compatibile con quello presente nella cache di nome "entry" 
allora sarà aggiornato e nuovamente cachato.





